/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A service provided by an organization, e.g. delivery service, print services, etc.
 */
export type Service = Service1 & Service2;
export type Service1 = Intangible;
/**
 * A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
 */
export type Intangible = Thing;
export type ImageObjectStreamId = string;
export type CreativeWorkStreamId = string;
export type ActionStreamId = string;
export type EventStreamId = string;
export type AdministrativeAreaStreamId = string;
export type GeoShapeStreamId = string;
export type PlaceStreamId = string;
export type ServiceChannelStreamId = string;
export type BrandStreamId = string;
export type OrganizationStreamId = string;
export type PersonStreamId = string;
export type PhysicalActivityCategoryStreamId = string;
export type ThingStreamId = string;
export type OfferCatalogStreamId = string;
export type ProductStreamId = string;
export type ServiceStreamId = string;
export type DemandStreamId = string;
export type OfferStreamId = string;
export type ReviewStreamId = string;

/**
 * The most generic type of item.
 */
export interface Thing {
  "@context"?: string;
  "@type"?: string;
  /**
   * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
   */
  additionalType?: string | string[];
  /**
   * An alias for the item.
   */
  alternateName?: string | string[];
  /**
   * A description of the item.
   */
  description?: string | string[];
  /**
   * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
   */
  disambiguatingDescription?: string | string[];
  /**
   * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
   *
   */
  identifier?: string;
  /**
   * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
   */
  image?: string | (string | ImageObjectStreamId)[];
  /**
   * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
   */
  mainEntityOfPage?: string | (string | CreativeWorkStreamId)[];
  /**
   * The name of the item.
   */
  name?: string;
  /**
   * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
   */
  potentialAction?: ActionStreamId | ActionStreamId[];
  /**
   * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
   */
  sameAs?: string | string[];
  /**
   * A CreativeWork or Event about this Thing.
   */
  subjectOf?: (CreativeWorkStreamId | EventStreamId) | (CreativeWorkStreamId | EventStreamId)[];
  /**
   * URL of the item.
   */
  url?: string;
  [k: string]: unknown;
}
export interface Service2 {
  /**
   * The overall rating, based on a collection of reviews or ratings, of the item.
   */
  aggregateRating?: string;
  /**
   * The geographic area where a service or offered item is provided.
   */
  areaServed?: string | AdministrativeAreaStreamId | GeoShapeStreamId | PlaceStreamId;
  /**
   * An intended audience, i.e. a group for whom something was created.
   */
  audience?: string;
  /**
   * A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
   */
  availableChannel?: ServiceChannelStreamId | ServiceChannelStreamId[];
  /**
   * An award won by or for this item.
   */
  award?: string | string[];
  /**
   * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
   */
  brand?: BrandStreamId | OrganizationStreamId;
  /**
   * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
   */
  broker?: (OrganizationStreamId | PersonStreamId) | (OrganizationStreamId | PersonStreamId)[];
  /**
   * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
   */
  category?:
    | (string | PhysicalActivityCategoryStreamId | ThingStreamId)
    | (string | string | PhysicalActivityCategoryStreamId | ThingStreamId)[];
  /**
   * Indicates an OfferCatalog listing for this Organization, Person, or Service.
   */
  hasOfferCatalog?: OfferCatalogStreamId | OfferCatalogStreamId[];
  /**
   * The hours during which this service or contact is available.
   */
  hoursAvailable?: string;
  /**
   * A pointer to another, somehow related product (or multiple products).
   */
  isRelatedTo?: (ProductStreamId | ServiceStreamId) | (ProductStreamId | ServiceStreamId)[];
  /**
   * A pointer to another, functionally similar product (or multiple products).
   */
  isSimilarTo?: (ProductStreamId | ServiceStreamId) | (ProductStreamId | ServiceStreamId)[];
  /**
   * An associated logo.
   */
  logo?: string | (string | ImageObjectStreamId)[];
  /**
   * An offer to provide this itemâ€”for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
   *
   */
  offers?: (DemandStreamId | OfferStreamId) | (DemandStreamId | OfferStreamId)[];
  /**
   * The tangible thing generated by the service, e.g. a passport, permit, etc.
   */
  produces?: string;
  /**
   * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
   */
  provider?: OrganizationStreamId | PersonStreamId;
  /**
   * Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
   */
  providerMobility?: string | string[];
  /**
   * A review of the item.
   */
  review?: ReviewStreamId | ReviewStreamId[];
  /**
   * The geographic area where the service is provided.
   */
  serviceArea?: AdministrativeAreaStreamId | GeoShapeStreamId | PlaceStreamId;
  /**
   * The audience eligible for this service.
   */
  serviceAudience?: string;
  /**
   * The tangible thing generated by the service, e.g. a passport, permit, etc.
   */
  serviceOutput?: string;
  /**
   * The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
   */
  serviceType?: string;
  /**
   * A slogan or motto associated with the item.
   */
  slogan?: string | string[];
  /**
   * Human-readable terms of service documentation.
   */
  termsOfService?: string | (string | string)[];
  [k: string]: unknown;
}
