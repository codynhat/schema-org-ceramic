/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A software application.
 */
export type SoftwareApplication = SoftwareApplication1 & SoftwareApplication2;
export type SoftwareApplication1 = CreativeWork;
/**
 * The most generic kind of creative work, including books, movies, photographs, software programs, etc.
 */
export type CreativeWork = Thing;
export type ImageObjectStreamId = string;
export type CreativeWorkStreamId = string;
export type ActionStreamId = string;
export type EventStreamId = string;
export type SoftwareApplicationStreamId = string;
export type DataFeedStreamId = string;

/**
 * The most generic type of item.
 */
export interface Thing {
  "@context"?: string;
  "@type"?: string;
  /**
   * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
   */
  additionalType?: string | string[];
  /**
   * An alias for the item.
   */
  alternateName?: string | string[];
  /**
   * A description of the item.
   */
  description?: string | string[];
  /**
   * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
   */
  disambiguatingDescription?: string | string[];
  /**
   * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
   *
   */
  identifier?: string;
  /**
   * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
   */
  image?: string | (string | ImageObjectStreamId)[];
  /**
   * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
   */
  mainEntityOfPage?: string | (string | CreativeWorkStreamId)[];
  /**
   * The name of the item.
   */
  name?: string;
  /**
   * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
   */
  potentialAction?: ActionStreamId | ActionStreamId[];
  /**
   * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
   */
  sameAs?: string | string[];
  /**
   * A CreativeWork or Event about this Thing.
   */
  subjectOf?: (CreativeWorkStreamId | EventStreamId) | (CreativeWorkStreamId | EventStreamId)[];
  /**
   * URL of the item.
   */
  url?: string;
  [k: string]: unknown;
}
export interface SoftwareApplication2 {
  /**
   * Type of software application, e.g. 'Game, Multimedia'.
   */
  applicationCategory?: string;
  /**
   * Subcategory of the application, e.g. 'Arcade Game'.
   */
  applicationSubCategory?: string;
  /**
   * The name of the application suite to which the application belongs (e.g. Excel belongs to Office).
   */
  applicationSuite?: string;
  /**
   * Device required to run the application. Used in cases where a specific make/model is required to run the application.
   */
  availableOnDevice?: string | string[];
  /**
   * Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
   */
  countriesNotSupported?: string | string[];
  /**
   * Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
   */
  countriesSupported?: string | string[];
  /**
   * Device required to run the application. Used in cases where a specific make/model is required to run the application.
   */
  device?: string;
  /**
   * If the file can be downloaded, URL to download the binary.
   */
  downloadUrl?: string;
  /**
   * Features or modules provided by this application (and possibly required by other applications).
   */
  featureList?: string | (string | string)[];
  /**
   * Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
   */
  fileSize?: string;
  /**
   * URL at which the app may be installed, if different from the URL of the item.
   */
  installUrl?: string;
  /**
   * Minimum memory requirements.
   */
  memoryRequirements?: string;
  /**
   * Operating systems supported (Windows 7, OSX 10.6, Android 1.6).
   */
  operatingSystem?: string | string[];
  /**
   * Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
   */
  permissions?: string | string[];
  /**
   * Processor architecture required to run the application (e.g. IA64).
   */
  processorRequirements?: string;
  /**
   * Description of what changed in this version.
   */
  releaseNotes?: string;
  /**
   * Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
   */
  requirements?: string | (string | string)[];
  /**
   * A link to a screenshot image of the app.
   */
  screenshot?: string | (string | ImageObjectStreamId)[];
  /**
   * Additional content for a software application.
   */
  softwareAddOn?: SoftwareApplicationStreamId | SoftwareApplicationStreamId[];
  /**
   * Software application help.
   */
  softwareHelp?: CreativeWorkStreamId | CreativeWorkStreamId[];
  /**
   * Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
   */
  softwareRequirements?: string | (string | string)[];
  /**
   * Version of the software instance.
   */
  softwareVersion?: string;
  /**
   * Storage requirements (free space required).
   */
  storageRequirements?: string;
  /**
   * Supporting data for a SoftwareApplication.
   */
  supportingData?: DataFeedStreamId | DataFeedStreamId[];
  [k: string]: unknown;
}
