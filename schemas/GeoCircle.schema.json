{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "GeoCircle",
  "description": "A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape\n          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.\n          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.\n       ",
  "type": "object",
  "allOf": [
    {
      "description": "The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.",
      "$ref": "#/definitions/GeoShape"
    }
  ],
  "properties": {
    "geoMidpoint": {
      "description": "Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle.",
      "oneOf": [
        { "$ref": "schema:GeoCoordinates" },
        { "type": "array", "items": { "$ref": "schema:GeoCoordinates" } }
      ]
    },
    "geoRadius": {
      "description": "Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).",
      "oneOf": [
        {
          "anyOf": [
            { "type": "number" },
            { "type": "string", "$comment": "https://schema.org/Distance" },
            { "type": "string" }
          ]
        },
        {
          "type": "array",
          "items": {
            "anyOf": [
              { "type": "number" },
              { "type": "string", "$comment": "https://schema.org/Distance" },
              { "type": "string" }
            ]
          }
        }
      ]
    }
  },
  "definitions": {
    "GeoShape": {
      "title": "GeoShape",
      "description": "The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.",
      "type": "object",
      "allOf": [
        {
          "description": "Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.",
          "$ref": "#/definitions/StructuredValue"
        }
      ],
      "properties": {
        "address": {
          "description": "Physical address of the item.",
          "anyOf": [{ "type": "string" }, { "$ref": "schema:PostalAddress" }]
        },
        "addressCountry": {
          "description": "The country. For example, USA. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1).",
          "anyOf": [{ "type": "string" }, { "$ref": "schema:Country" }]
        },
        "box": {
          "description": "A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.",
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        "circle": {
          "description": "A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.",
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        "elevation": {
          "description": "The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). Values may be of the form 'NUMBER UNIT_OF_MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.",
          "anyOf": [{ "type": "number" }, { "type": "string" }]
        },
        "line": {
          "description": "A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.",
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        "polygon": {
          "description": "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.",
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        "postalCode": {
          "description": "The postal code. For example, 94043.",
          "type": "string"
        }
      }
    },
    "StructuredValue": {
      "title": "StructuredValue",
      "description": "Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.",
      "type": "object",
      "allOf": [
        {
          "description": "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.",
          "$ref": "#/definitions/Intangible"
        }
      ]
    },
    "Intangible": {
      "title": "Intangible",
      "description": "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.",
      "type": "object",
      "allOf": [
        {
          "description": "The most generic type of item.",
          "$ref": "#/definitions/Thing"
        }
      ]
    },
    "Thing": {
      "title": "Thing",
      "description": "The most generic type of item.",
      "type": "object",
      "properties": {
        "@context": { "type": "string" },
        "@type": { "type": "string" },
        "additionalType": {
          "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
          "oneOf": [
            { "type": "string", "format": "uri" },
            { "type": "array", "items": { "type": "string", "format": "uri" } }
          ]
        },
        "alternateName": {
          "description": "An alias for the item.",
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        "description": {
          "description": "A description of the item.",
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        "disambiguatingDescription": {
          "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
          "oneOf": [
            { "type": "string" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        "identifier": {
          "description": "The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.\n        ",
          "anyOf": [
            { "type": "string", "format": "uri" },
            { "type": "string" },
            { "$ref": "schema:PropertyValue" }
          ]
        },
        "image": {
          "description": "An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].",
          "oneOf": [
            {
              "anyOf": [
                { "type": "string", "format": "uri" },
                { "$ref": "schema:ImageObject" }
              ]
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  { "type": "string", "format": "uri" },
                  { "$ref": "schema:ImageObject" }
                ]
              }
            }
          ]
        },
        "mainEntityOfPage": {
          "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.",
          "oneOf": [
            {
              "anyOf": [
                { "type": "string", "format": "uri" },
                { "$ref": "schema:CreativeWork" }
              ]
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  { "type": "string", "format": "uri" },
                  { "$ref": "schema:CreativeWork" }
                ]
              }
            }
          ]
        },
        "name": { "description": "The name of the item.", "type": "string" },
        "potentialAction": {
          "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
          "oneOf": [
            { "$ref": "schema:Action" },
            { "type": "array", "items": { "$ref": "schema:Action" } }
          ]
        },
        "sameAs": {
          "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
          "oneOf": [
            { "type": "string", "format": "uri" },
            { "type": "array", "items": { "type": "string", "format": "uri" } }
          ]
        },
        "subjectOf": {
          "description": "A CreativeWork or Event about this Thing.",
          "oneOf": [
            {
              "anyOf": [
                { "$ref": "schema:CreativeWork" },
                { "$ref": "schema:Event" }
              ]
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  { "$ref": "schema:CreativeWork" },
                  { "$ref": "schema:Event" }
                ]
              }
            }
          ]
        },
        "url": {
          "description": "URL of the item.",
          "type": "string",
          "format": "uri"
        }
      }
    }
  }
}
